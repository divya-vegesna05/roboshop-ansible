- name: catalogue
  hosts: catalogue
  become: yes
  tasks:
  - name: enable nodejs command
    ansible.builtin.shell: dnf module disable nodejs -y; dnf module enable nodejs:18 -y
  - name: Install nodejs
    ansible.builtin.package:
      name: nodejs
      state: present
  - name: add user roboshop
    ansible.builtin.user:
      name: roboshop
  - name: create app directory
    ansible.builtin.file:
      path: /app
      state: directory
  - name: Download application
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
      dest: /tmp/catalogue.zip 
  - name: Unarchive a file that is already on the remote machine
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes
  - name: Change the working directory to /app and run the command 
    ansible.builtin.command: npm install
    args:
      chdir: /app
  - name: Catalogue Service
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service
  - name: reload daemon
    ansible.builtin.systemd_service:
      daemon_reload: true
  - name: Enable and start catalogue
    ansible.builtin.service:
      name: catalogue
      state: started
      enabled: true
  - name: copy mongo repo
    ansible.builtin.copy:
      src: mongo.repo
      dest: /etc/yum.repos.d/mongo.repo
  - name: Install mongodb
    ansible.builtin.package:
      name: mongodb-org-shell
      state: present
  - name: get products
    ansible.builtin.command:  mongo --host mongodb.jasritha.tech --quiet --eval 'db = db.getSiblingDB("catalogue"); db.products.count()'
    register: products
  - name: Load Schema
    ansible.builtin.command: mongo --host mongodb.jasritha.tech < /app/schema/catalogue.js
    

  
  

  

  
      